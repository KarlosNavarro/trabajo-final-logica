# Form implementation generated from reading ui file 'prueba.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from src.controlladores.reservasController import ReservasController
from src.models.reservaModel import ReservaModel

from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):


    def funciones_pruebas(self, param):
        print(param.text())
        self.optencion_de_datos()

    def optencion_de_datos(self):
        #crear objeto de reserva para poder hacer la busqueda
        objeto_Reserva = ReservaModel('10AM',1)
        #creamos un objeto del controlador de reservas  y le pasamos un modelo de datos de reservas
        asientos_ocupados = ReservasController(objeto_Reserva)
        #print(asientos_ocupados.getReservasBySalaAndHorario())

        #letras para organizar los asientos del cine
        letras = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
        #arreglo de asientos posibles teniendo en cuenta las letras y la cantidad de columnas
        data = []
        # for que itera y hace la agrupacion de las letras con los numeros
        for letra in letras:
            dat = []
            for i in range(9):
                dat.append(str(letra) + str(i))
            data.append(dat)

        #print(data)

        return [letras, data, asientos_ocupados.getReservasBy_Sala_Horario_Pelicula(1)]



    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(700, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 627, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 130, 711, 191))

        self.tableWidget.setObjectName("tableWidget")


        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(6)

        self.columnas = self.optencion_de_datos()[0]
        self.listaDatos = self.optencion_de_datos()[1]

        # iteracion que sierve para crear la columna
        for fila, lista in enumerate(self.listaDatos):
                for columna, elemento in enumerate(lista):
                    self.tableWidget.setItem(fila, columna, QtWidgets.QTableWidgetItem(elemento))
                    self.tableWidget.item(fila, columna).setSizeHint(QSize(50,50))
                    for el in self.optencion_de_datos()[2]:
                        #print(el)
                        if(elemento == el[5]):
                            #print(str(letras[fila]) + str(columna))
                            #print(self.optencion_de_datos()[2])
                            self.tableWidget.item(fila, columna).setBackground(255)

        #evento clic que toma el valor del item clickeado
        self.tableWidget.cellDoubleClicked.connect(lambda: self.funciones_pruebas(self.tableWidget.currentItem()))



        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        #self.pushButton.setText(_translate("MainWindow", "PushButton"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
